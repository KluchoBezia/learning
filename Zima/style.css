html,
body {
    width: 100vw;  /* szerokość elementu jest równa 100% szerokości okna przeglądarki (viewport width), niezależnie od jego elementu nadrzędnego. Ignoruje marginesy, paddingi oraz szerokość rodzica, jesli byłoby 100% to je uwzględnia bo oznacza, że szerokość elementu jest równa 100% szerokości jego elementu nadrzędnego. */
    height: 100vh;
}

body {
    background-color: #030f29;
}

#snow_container {
    position: fixed; /* sprawia, że element jest umieszczony w odniesieniu do okna przeglądarki (viewportu) i pozostaje w tym samym miejscu podczas przewijania strony. W przypadku klasy .snow_container, oznacza to, że element z tą klasą będzie zawsze widoczny na ekranie, niezależnie od przewijania. */
    z-index: 1; /* ustawia element na warstwę "1" w stosie z-index, co wpływa na to, jak element jest układany w stosie z innymi elementami na stronie. Elementy z wyższym z-index będą na wierzchu tych z niższym. */
    width: 100%;
    height: 100%;
    pointer-events: none; /* sprawia, że element, do którego jest zastosowana, nie reaguje na interakcje myszką, takie jak kliknięcia, najechanie kursorem, czy inne zdarzenia związane z myszką. Oznacza to, że użytkownik może "przenikać" przez ten element, a kliknięcia i inne zdarzenia będą dotyczyć elementów znajdujących się pod nim. */

}

.flake_container {
    position: absolute; /* Właściwości top, right, bottom, left: Można użyć tych właściwości do dokładnego ustawienia pozycji elementu. */
    padding: 0 50px;
    top: 0;

   animation: fall 10s 0s 1 linear forwards; /* nazwa animacji - jak długo trwa - po jakim czasie się zaczyna - ilośc powtórzeń animacji - jak szybko ma się wykonać (bez przyspieszenia to linear) - odtwarza się od początku do końca czyli forwards*/
}

.flake_container img {
    position: absolute;
    animation: rotate 6s 0s infinite linear forwards,
        leftToRight 2s 0s infinite ease-in-out alternate; /* alternate - uruchamia się animacja najpierw do przodu a potem do tyłu */ /* ease in out powoduje że animacja najpierw przyspiesza, potem stała prędkośc pod koniec zwlania */

}

@keyframes fall {
    from {
        top: 0%;
    }

    to {
        top:100%;
    }
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes leftToRight {
    from{
        left: 0%;
    }
    to {
        left: 100%;
    }
}